<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd  
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"
		default-autowire="byName">
	
	<context:property-placeholder location="classpath*:conf/*.properties" />
	<context:annotation-config />

	<!-- HandlerMapping -->        
	<!-- BeanNameUrlHandlerMapping：表示将请求的URL和Bean名字映射，如URL为 “上下文/hello”， -->
	<!-- 则Spring配置文件必须有一个名字为“/hello”的Bean，上下文默认忽略。 -->
	<!-- <bean class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping"/> -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"/> 
	<!--配置拦截器, 多个拦截器,顺序执行 -->
    <mvc:interceptors>  
        <mvc:interceptor>  
            <!-- 匹配的是url路径， 如果不配置或/**,将拦截所有的Controller -->
            <mvc:mapping path="/**" />
            <bean class="com.graduation.web.interceptor.DefaultHandlerInterceptor"></bean>  
        </mvc:interceptor>
        <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法 -->
    </mvc:interceptors>
	
	<!-- HandlerAdapter -->
	<!-- SimpleControllerHandlerAdapter： -->
	<!-- 表示所有实现了org.springframework.web.servlet.mvc.Controller接口的Bean -->
	<!-- 可以作为Spring Web MVC中的处理器。如果需要其他类型的处理器可以通过实现HadlerAdapter来解决。 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter"/>  -->
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter"/> 

   	<!-- 自动扫描(自动注入)，扫描me.gacl.service这个包以及它的子包所有使用@Service注解标注的类 -->
   	<context:component-scan base-package="com.graduation" />
   	<mvc:resources location="/js/" mapping="/js/**"/>
   	<mvc:resources location="/css/" mapping="/css/**"/>
   	<mvc:resources location="/images/" mapping="/images/**"/>
   		<!-- 模板信息设置 -->
    <bean id="velocityConfigurer"
        class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
        <property name="resourceLoaderPath"  value="/WEB-INF/views" /><!-- 設置模板防止位置-->
        <property name="configLocation" value="WEB-INF/conf/velocity.properties" />
    </bean>
	
	<!-- 设置视图解析工具 -->
    <bean id="viewResolver"
        class="org.springframework.web.servlet.view.velocity.VelocityLayoutViewResolver">
        <property name= "cache" value= "true"/>  
        <property name= "prefix" value= "/"/> 
        <property name="suffix" value=".vm" />
        <!-- 避免乱码 -->
        <property name="contentType" value="text/html;charset=UTF-8" />
        <property name="toolboxConfigLocation" value="/WEB-INF/conf/tools.xml" />  
        <property name="layoutUrl" value="/layout/layout.vm" />
        <property name="dateToolAttribute" value="dateTool" /><!--日期函数名称-->
        <property name="numberToolAttribute" value="numberTool" /><!--数字函数名称-->
        <property name="exposeSpringMacroHelpers" value="true" /><!--是否使用spring对宏定义的支持-->
        <property name="exposeRequestAttributes" value="true" /><!--是否开放request属性-->
        <property name="requestContextAttribute" value="rc"/><!--request属性引用名称--> 
        <property name="exposeSessionAttributes" value="true" />
    </bean>
</beans>